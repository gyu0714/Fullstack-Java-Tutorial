API_Collection

1.롬복(Lombok)
	- https://projectlombok.org/
	- @어노테이션 기반으로 반복되는 소스 코드를 컴파일 과정에서 생성해준다
	
2. Collection Framework
	- https://docs.oracle.com/javase/8/docs/technotes/guides/collections/reference.html
	- 개발에 필요한 자료구조(Data Structure)를 구현한 라이브러리
	- java.util 패키지
	- 최적화된 알고리즘을 사용하여 개발 소요시간 절약 가능
	
	- Collection 인터페이스
		- List Interface
			- 객체를 순서에 따라 저장, 관리
			- 자료구조 리스트의 구현을 위한 인터페이스
			- 중복 허용
			- ArrayList, Vector, LinkedList, ...
			
			Stack, Queue
			https://docs.oracle.com/javase/8/docs/api/java/util/Stack.html
			https://docs.oracle.com/javase/8/docs/api/java/util/Queue.html
			
			<Stack> : LIFO(Last In First Out) 구조
				- (재귀적)함수를 호출해서 사용할 때
				- 그래프의 깊이 우선 탐색(DFS)
			- push() : 데이터 저장
			- peek() : 가장 마지막에 삽입 된 데이터 반환
			- pop() : 가장 마지막에 삽입 된 반환 & 삭제
			
			<Queue> : FIFO(Fisrt In First Out) 구조
				- 그래프의 넓이 우선 탐색(BFS)
				- Enque
				- Deque
			
			- add()
			- peek() : 가장 처음에 삽입 된 데이터 반환
			- pop() : 가장 처음에 삽입 된 데이터 삭제
 			
			[자료구조]
			- ArrayList
				- 내부 배열에 객체를 저장하여 인덱스로 관리
				- 초기 생성시 크기 지정 가능(초기값 10)
			
			- LinkedList
				- Node 단위로 구성, Data Pointer 가지고 한 줄로 연결되어 이쓴 자료구조
				- 각 Node는 연결, Pointer는 Node의 연결을 담당
				- 데이터 변경시 인덱스가 변경되는 것이 아니라 Node 참조 링크 주소만 변경하여 관리
			
			- InOut
			
		
		- Set Interface
			- 유일한 값을 관리
			- HashSet, TreeSet, ...
			- HashSet 출력 
				- iterator : 출력
					- hasNext()
					- next()
				- isEmpty() : boolean
				- remove()
	
	- Map Interface
		- {Key : Value}로 이루어진 객체 관리
		- Key 중복 불가능
		- HashMap, TreeMap, ...
		- entry
	
	- 제네릭(Generic)
		- 컬렉션 객체 생성시, 저장되는 데이터 타입을 지정
		
		